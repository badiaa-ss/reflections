How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It dramatically increased the speed by which I was able to pinpoint the difference.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps me see my thought progression and how I rewrote something to be more efficient than it was in a previous version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Changes can be grouped in a logical groups vs. frequent and unrelated changes.
    Cons: Forgetting to save a version would cause issues that non-manual commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Saving all files at once makes it easy to know how they worked together at any point in time especially when they are files that work together.

How can you use the commands git log and git diff to view the history of files?

    I can determine exactly what and where changes were made throughout the project.

How might using version control make you more confident to make changes that
could break something?

    It makes it very easy to revert back to a version that worked which means that the version right after it introduced the bug.

Now that you have your workspace set up, what do you want to try using Git for?

    This is very useful for writing any code project of any size and in a any language.
